---
  - hosts: all
    tasks:
    - name: "Add vorms user"
      user:
        name: "vorms"
        shell: "/bin/bash"
    - name: Copy app to /opt/apps/vorms
      synchronize:
        src: ../code/
        dest: /opt/apps/vorms/
    - name: Copy site config to nginx sites-available
      copy:
        src: ./vorms-http.conf
        dest: /etc/nginx/sites-available/vorms
        owner: root
        group: root
        mode: '0744'
    - name: Create symlink from conf in sites-enabled to conf in sites-available
      file:
        src: /etc/nginx/sites-available/vorms
        dest: /etc/nginx/sites-enabled/vorms
        state: link
        owner: root
        group: root
        mode: '0744'
    - name: "Restart nginx"
      service:
        name: nginx
        state: restarted
    - name: "Create required directories in /etc/letsencrypt"
      file:
        path: "/etc/letsencrypt/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      with_items:
      - account
      - certs
      - csrs
      - keys
    - name: "Generate a Let's Encrypt account key"
      shell: "if [ ! -f {{ letsencrypt_account_key }} ]; then openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}; fi"
    - name: "Generate Let's Encrypt private key"
      shell: "openssl genrsa 4096 | sudo tee /etc/letsencrypt/keys/{{ domain_name }}.key"
    - name: "Generate Let's Encrypt CSR"
      shell: "openssl req -new -sha256 -key /etc/letsencrypt/keys/{{ domain_name }}.key -subj \"/CN={{ domain_name }}\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"\n[SAN]\nsubjectAltName=DNS:{{ domain_name }}\")) | sudo tee /etc/letsencrypt/csrs/{{ domain_name }}.csr"
      args:
        executable: /bin/bash
    - name: "Begin Let's Encrypt challenges"
      letsencrypt:
        acme_directory: "{{ acme_directory }}"
        acme_version: "{{ acme_version }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        account_email: "{{ acme_email }}"
        terms_agreed: 1
        challenge: "{{ acme_challenge_type }}"
        csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
        fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
        remaining_days: 91
      register: acme_challenge_vorms_swart_capetown
    - name: "Create .well-known/acme-challenge directory"
      file:
        path: /opt/apps/vorms/frontend/.well-known/acme-challenge
        state: directory
        owner: vorms
        group: www-data
        mode: '0755'
    - name: "Implement http-01 challenge files"
      copy:
        content: "{{ acme_challenge_vorms_swart_capetown['challenge_data'][item]['http-01']['resource_value'] }}"
        dest: "/opt/apps/vorms/frontend/{{ acme_challenge_vorms_swart_capetown['challenge_data'][item]['http-01']['resource'] }}"
        owner: vorms
        group: www-data
        mode: '0644'
      with_items:
      - "{{ domain_name }}"
      when: acme_challenge_vorms_swart_capetown['challenge_data'] != {}
    - name: "Complete Let's Encrypt challenges"
      letsencrypt:
        acme_directory: "{{ acme_directory }}"
        acme_version: "{{ acme_version }}"
        account_key_src: "{{ letsencrypt_account_key }}"
        account_email: "{{ acme_email }}"
        challenge: "{{ acme_challenge_type }}"
        csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
        dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
        chain_dest: "{{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.crt"
        fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}"
        data: "{{ acme_challenge_vorms_swart_capetown }}"
      when: acme_challenge_vorms_swart_capetown['challenge_data'] != {}
    - name: Copy site config to nginx sites-available
      copy:
        src: ./vorms-https.conf
        dest: /etc/nginx/sites-available/vorms
        owner: vorms
        group: vorms
        mode: '0744'
    - name: "Restart nginx"
      service:
        name: nginx
        state: restarted